<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2021-02-03T10:30:56+05:30</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">Variable</title><subtitle>A web log about programming, software, technology, life and my thoughts in general.</subtitle><author><name>Ajinkya Bawaskar</name><email>ajinkyabawaskar2@gmail.com</email></author><entry><title type="html">My Smart India Hackathon Experience</title><link href="http://localhost:4000/blog/personal/Smart-India-Hackathon-Experience" rel="alternate" type="text/html" title="My Smart India Hackathon Experience" /><published>2020-09-22T00:00:00+05:30</published><updated>2020-09-22T00:00:00+05:30</updated><id>http://localhost:4000/blog/personal/Smart-India-Hackathon-Experience</id><content type="html" xml:base="http://localhost:4000/blog/personal/Smart-India-Hackathon-Experience">&lt;p&gt;Amidst the coronavirus havoc, we almost forgot that we had qualified for Smart India Hackathon finals. It started when the communication from our nodal center asked us about our progress. We were a team of 6, but none of us had any prior experience with building chatbots. In fact, this was one of the reasons why we chose the problem statement, so that we could get to learn new tech. This blog post explains what challenges we faced and how we overcame them.&lt;/p&gt;

&lt;p&gt;For some context, this is the problem statement:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Students teams are expected to develop a context-based NLP engine to guide the tourists using &lt;a href=&quot;https://www.mindmeld.com&quot;&gt;MindMeld&lt;/a&gt; capabilities. MindMeld is a platform to power the next generation of chat and voice assistants. It is an AI platform for building conversational interfaces. Our requirements are to develop a Webex Teams or WhatsApp bot capable of NLP to guide tourists. You can choose any one from some of the scenarios that we have listed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Solution proposed:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We are encouraging rural tourism using the chatbot technology. The chatbot while acting as a virtual travel agent recommends destinations, helps in making bookings, and reminds the user of events like departures and check-ins. Additionally, we are trying to get the users to live in village homes instead of hotels so that they get the true rural experience not artificially created rural environments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For implementing the solution we followed the &lt;a href=&quot;https://www.mindmeld.com/docs/quickstart/00_overview.html&quot;&gt;Building a Conversational Interface in 10 Steps&lt;/a&gt; documentation.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Select the right use case&lt;/strong&gt; - Our use case was pretty clear from the problem statement itself. We wanted the chatbot to answer specific tourism related questions like travel and accomodation.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Script your ideal dialogue interactions&lt;/strong&gt; - We used &lt;a href=&quot;https://www.figma.com&quot;&gt;Figma&lt;/a&gt; to script our dialogue interaction so that we can collaborate on it as a team and the infinite canvas could occupy our dialogues no matter which direction they go to.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;image center-image&quot;&gt;
    &lt;img src=&quot;/assets/img/dialogue.png&quot; alt=&quot;Sample Dialogue Interaction&quot; class=&quot;center-image&quot; /&gt;
    &lt;figcaption class=&quot;center&quot;&gt;Sample Dialogue Interaction&lt;/figcaption&gt;
&lt;/figure&gt;</content><author><name>Ajinkya Bawaskar</name></author><summary type="html">Amidst the coronavirus havoc, we almost forgot that we had qualified for Smart India Hackathon finals. It started when the communication from our nodal center asked us about our progress. We were a team of 6, but none of us had any prior experience with building chatbots. In fact, this was one of the reasons why we chose the problem statement, so that we could get to learn new tech. This blog post explains what challenges we faced and how we overcame them.</summary></entry><entry><title type="html">Tips and Tricks of Competitive Programming</title><link href="http://localhost:4000/blog/programming/tricks-and-tips-of-competitive-programming" rel="alternate" type="text/html" title="Tips and Tricks of Competitive Programming" /><published>2020-09-21T00:05:07+05:30</published><updated>2020-09-21T00:05:07+05:30</updated><id>http://localhost:4000/blog/programming/tricks-and-tips-of-competitive-programming</id><content type="html" xml:base="http://localhost:4000/blog/programming/tricks-and-tips-of-competitive-programming">&lt;p&gt;I have been practicing competitive programming for 1.5 months as of today, and I found out that there are lots of resources for programmers, from StackOverflow to GeeksForGeeks that help with knowledge, language syntax and errors. These are pretty handy when you are working on development, but with competitive programming? Not so much.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/js-frameworks.svg&quot; alt=&quot;Programming&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Competitive programming requires you to think about a solution to given problem with given constraints, meaning the solution you propose must meet certain complexity requirements. I have compiled (and working on) a list of tips that can help you achieve better algorithms or approaches. To be honest here, I am just a 2 star on CodeChef and I haven’t even started on CodeForces yet. But I believe these might help someone down the lane.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The single most important factor that affects your solution is the logic behind it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Some of these tips are meant to provide an alternate logic to sub-problems a typical problem might have. These tips are not in any logical sequence and neither do they portray the best coding practices. I am writing them down here as notes of my competitive programming journey.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use Fast IO instead of regular cin, cout.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Include &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fast;&lt;/code&gt; in your main method.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; in place of repetitive additions/subtractions.&lt;/li&gt;
  &lt;li&gt;Use fmod(dividend, divisor) for modulo operation on floats.&lt;/li&gt;
  &lt;li&gt;Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;bits/stdc++.h&amp;gt;&lt;/code&gt; in place of all other includes. (Is a bad programming practice)&lt;/li&gt;
  &lt;li&gt;If you want to count the number of digits required to make the sum of digits equal to a given number, then keep subtracting 9 from the number, and count how many times you subtracted.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[i] &amp;amp;a[j]==a[i]&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[i]==a[i]&amp;amp;a[j]&lt;/code&gt; will give different answers because of operator precedence. To first calculate bitwise AND and then compare, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;((a[i]&amp;amp;a[j]) == a[i])&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Do not implement a recursive approach on problems that can be solved much easily using an iterative approach. See: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZCO14003&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;In CodeChef contests (long challenges, cook-offs, lunchtime and ranked contests) the first question tends to be of cakewalk difficulty level. While the second problem is of easy difficulty level, so overall, if you are a beginner, try and attempt these 2 questions and do not stress over the remaining questions. But attempt them after you’re done with first two.&lt;/li&gt;
  &lt;li&gt;Competitive programming will require you to focus on simple programming aspects like loops and conditional statements. Then it moves towards complexity analysis and simpler data structures like unordered maps and vectors. Then you’ll need to have knowledge of algorithms to recognise whether it is an optimization problem, etc. Then it goes around with more advanced data structures like trees, etc.&lt;/li&gt;
  &lt;li&gt;Look at the constraints to see what algorithm is required. If the input size is 10&lt;sup&gt;6&lt;/sup&gt; then you can try and have an O(n&lt;sup&gt;2&lt;/sup&gt;) solution. If input size is 10&lt;sup&gt;6+&lt;/sup&gt; then you have to think about a O(n) solution. On CodeChef, 10&lt;sup&gt;8&lt;/sup&gt; operations shall be performed in 1 second.&lt;/li&gt;
  &lt;li&gt;In problems involving calculating the factorial of very large numbers and large test cases, you don’t actually have to calculate the factorial. Observe the prime factors, etc to get a direct formula instead of calculating factorial and then performing operation on each result.&lt;/li&gt;
  &lt;li&gt;Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result=condition?case1:case2&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if.. else..&lt;/code&gt; whenever applicable, to have more readable code.&lt;/li&gt;
  &lt;li&gt;Do not use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;endl&lt;/code&gt;, it might slow down writing output to file in case of 10&lt;sup&gt;5+&lt;/sup&gt; lines being written. Either use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;“\n”&lt;/code&gt; or use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#define endl “\n”&lt;/code&gt; in your template.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Ajinkya Bawaskar</name></author><summary type="html">I have been practicing competitive programming for 1.5 months as of today, and I found out that there are lots of resources for programmers, from StackOverflow to GeeksForGeeks that help with knowledge, language syntax and errors. These are pretty handy when you are working on development, but with competitive programming? Not so much.</summary></entry><entry><title type="html">How I Set Up My Blog</title><link href="http://localhost:4000/blog/personal/how-i-set-up-my-blog" rel="alternate" type="text/html" title="How I Set Up My Blog" /><published>2020-09-20T00:00:00+05:30</published><updated>2020-09-20T00:00:00+05:30</updated><id>http://localhost:4000/blog/personal/how-i-set-up-my-blog</id><content type="html" xml:base="http://localhost:4000/blog/personal/how-i-set-up-my-blog">&lt;p&gt;&lt;img src=&quot;/blog/assets/img/blog.svg&quot; alt=&quot;Programming&quot; height=&quot;400px&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this post, I write about how I set up this blog.
To summarize, this blog is a static website, which means that no back-end processing is required in order to serve any of the webpages that you might see. All the pages of this blog are generated at the time of building the application.&lt;/p&gt;

&lt;p&gt;Why would someone want a website, moreover, a blogging website without a backend? One of the biggest factors for me is that there are no costs involved in hosting such a website. Neither do you have to spend a dime for the domain name. So, how does this work? Let’s get in to it right away!&lt;/p&gt;

&lt;p&gt;What technologies are used? &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to develop and &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; to host.&lt;/p&gt;

&lt;p&gt;How did I set this up?&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Install Ruby: This is fairly straightforward. You can &lt;a href=&quot;https://www.ruby-lang.org/en/documentation/installation/#installers&quot;&gt;install&lt;/a&gt; Ruby on the platform you’re working on. Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby -v&lt;/code&gt; to make sure Ruby is installed properly.&lt;/li&gt;
  &lt;li&gt;Install Jekyll: Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem install jekyll bundler&lt;/code&gt; to install Jekyll. Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll -v&lt;/code&gt; to make sure Jekyll is installed correctly.&lt;/li&gt;
  &lt;li&gt;Create a new project: Navigate to the desired directory and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new myblog&lt;/code&gt; where myblog is obviously name of your blog. And navigare to (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd myblog&lt;/code&gt;) the same.&lt;/li&gt;
  &lt;li&gt;Build: Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; to build your basic jekyll website and serve it on localhost, port 4000 by default.&lt;/li&gt;
  &lt;li&gt;That’s it: Hit the browser of your choice and go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt; to see your Jekyll website up and running.&lt;/li&gt;
  &lt;li&gt;Deploying: Assuming familiarity with Git, just push your project directory to a repo on GitHub and enable GitHub pages under the Settings tab. And you’re done!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Isn’t it easy? Anyways, if you try this out and face any difficulties, get in touch via the email in footer and I’ll try my best to get back at the earliest.&lt;/p&gt;</content><author><name>Ajinkya Bawaskar</name></author><summary type="html"></summary></entry></feed>